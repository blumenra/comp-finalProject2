55
33/2
77
0

(define maor 'a)
(integer? maor)
(integer? #\a)
(integer? "#t")
(integer? #t)
(integer? #f)
(integer? 't)
(integer? 'f)
(define maor 55)
(integer? maor)
(define maor 0)
(integer? maor)
(define minus -2)
(integer? minus)
(integer? 3000)
(integer? -3000)
(define frac 7/12)
(integer? frac)
(define maor "maor")
(integer? maor)
(define maor #f)
(integer? maor)
(integer? 'maor)
(integer? "\x53;")
(integer? #\a)
(integer? #\A)
(integer? #\x53)
(integer? #\newline)
(integer? "\f")
(integer? "\t")
(integer? "\\")
(integer? 53/17)
(integer? -53/17)
(integer? 0/1)
(integer? 3/1)
(integer? -3/1)
(integer? -0/1)
(integer? '())
(integer? '(1 2))
(integer? (and))
(integer? (or))
(integer? '#(1 2))

(define integerer  -3000)
(define checker (lambda (x) (lambda (y) (x y))))
((checker integer?) "string")
((checker integer?) 'symbol)
((checker integer?) integerer) 
((checker integer?) #t)
((checker integer?) 555)
((checker integer?) 5/7)
((checker integer?) 3/1)
((checker integer?) '())
((checker integer?) '(1 2) )
((checker integer?) '#(1 2 #t))
((checker integer?) (begin 1 2 -77))
((checker integer?) (begin -39 1 2))
