(apply + '(1 2 3))
(apply + '(1))
(apply + 0 '(8 5 4 3))
(apply + '(1))
(apply + 1 '(8 5 4 3))
(apply + 7 8 '(8 5 4 3))
(apply append '(3) '((5)))
(apply cons #t '(7))
(apply boolean? '(#t))
(apply number? '(5))
(apply eq? 5 '(5))
(apply list 8 '(5 7 4))
(apply make-string 5 '(#\a) )
(apply make-vector 3 '(#\b))
(apply (lambda (x y t) (+ x y t)) '(1 2 32/33) )
(apply (lambda (x y t) (< x y t)) '(1 2 32/33) )
(apply (lambda (x y t) (> x y t)) '(1 2 32/33))
(apply (lambda (x y t) (- x y t)) '(1 2 32/33) )
(apply (lambda (x y t) (= x y t)) '(1 2 32/33))
(apply (lambda (x y t) (* x y t)) '(1 2 32/33))
(apply (lambda (x y t) (/ x y t)) '(1 2 32/33))
(apply + '(1 2 3 4 5 32/33))