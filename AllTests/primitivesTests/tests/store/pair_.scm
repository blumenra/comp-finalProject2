'(1 . (2 . ()))
'(1 2)
'(1 . ())
'()

(define maor 'a)
(pair? maor)
(pair? #\a)
(pair? "#t")
(pair? #t)
(pair? #f)
(pair? 't)
(pair? 'f)
(define maor 55)
(pair? maor)
(define maor '())
(pair? maor)
(define pnina '(1 . (2 . ())))
(pair? pnina)
(pair? 3000)
(define frac 7/12)
(pair? frac)
(define maor "maor")
(pair? maor)
(define maor #f)
(pair? maor)
(pair? 'maor)
(pair? "\x53;")
(pair? #\a)
(pair? #\A)
(pair? #\x53)
(pair? #\newline)
(pair? "\f")
(pair? "\t")
(pair? "\\")
(pair? '())
(pair? '(1 2))
(pair? (and))
(pair? (or))
(pair? '#(1 2))
(pair? '(1 2))
(define maor '(1 . ()))
(pair? maor)

(define pairer '(1 . ()))
(define checker (lambda (x) (lambda (y) (x y))))
((checker pair?) "string")
((checker pair?) 'symbol)
((checker pair?) pairer) 
((checker pair?) #t)
((checker pair?) 555)
((checker pair?) 5/7)
((checker pair?) 3/1)
((checker pair?) '())
((checker pair?) '(1 2) )
((checker pair?) '#(1 2 #t))
((checker pair?) (begin 1 2 '(1 . () )))
((checker pair?) (begin '(1 . ()) 1 2))