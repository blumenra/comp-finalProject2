(map append '((1) (2) (3)) '((4) (5) (#t)))
(map cons '(5 7 4) '(3 7 9))
(map boolean? '(5 3 #t))
(map number? '(5 3 #t))
(map eq? '(5 7 9) '(3 7 6))
(map list '(5 7 4) '(3 7 9))
(map make-string '(5 7 9) '(#\a #\b #\c))
(map make-vector '(3 7 9) '(#\a #\b #\c))
(map (lambda (x y t) (+ x y t)) '(1 2 3 4 5 32/33) '(6 7 8 9 10 11/12) '(9 77 88 33 44 66/65))
(map (lambda (x y t) (< x y t)) '(1 2 3 4 5 32/33) '(6 7 8 9 10 11/12) '(9 77 88 33 44 66/65))
(map (lambda (x y t) (> x y t)) '(1 2 3 4 5 32/33) '(6 7 8 9 10 11/12) '(9 77 88 33 44 66/65))
(map (lambda (x y t) (- x y t)) '(1 2 3 4 5 32/33) '(6 7 8 9 10 11/12) '(9 77 88 33 44 66/65))
(map (lambda (x y t) (= x y t)) '(1 2 3 4 5 32/33) '(1 7 8 9 10 11/12) '(1 77 88 33 44 66/65))
(map (lambda (x y t) (* x y t)) '(1 2 3 4 5 32/33) '(6 7 8 9 10 11/12) '(9 77 88 33 44 66/65))
(map (lambda (x y t) (/ x y t)) '(1 2 3 4 5 32/33) '(6 7 8 9 10 11/12) '(9 77 88 33 44 66/65))
(map + '(1 2 3 4 5 32/33) '(6 7 8 9 10 11/12) '(9 77 88 33 44 66/65))