(string-ref "apple" 0)
(string-ref "apple" 4)
(string-ref "apple" 2)
(string-ref "dassdsadadassdm" 7)
(string-ref "maor" 2)
(string-ref "\t" 0)
(string-ref "\x53;" 0)
(string-ref "\f" 0)
(string-ref " hh jj " 0)
(string-ref "\f\t\x53;" 0)
(string-ref "\f\t\x53;" 1)
(string-ref "\f\t\x53;" 2)
(define stringer "string")
(string-ref stringer 1)
(define checker (lambda (x y) (string-ref x y)))
(checker stringer 1)

;Alon & Ziv: Not sure how to handle eq? and symbol->string not implemented yet
;; (eq? (checker stringer 3) #\i)
;; (eq? (checker stringer 15/5) #\g)
;; (eq? (checker stringer 4) #\n)
;; (define stringer2 "strint")
;; (eq? (string-ref stringer 1) (string-ref stringer2 1))
;; (string-ref (symbol->string 'maor) 2)