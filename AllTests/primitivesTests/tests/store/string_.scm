'a
'b
"a"
"b"
"c"
'c
(string? "")
(define maor 'a)
(string? maor)
(string? 'a)
(string? "#t")
(string? #t)
(string? #f)
(string? 't)
(string? 'f)
(define maor "a")
(string? maor)
(define maor "maor")
(string? maor)
(define maor #f)
(string? maor)
(string? 'maor)
(string? "\x53;")
(string? #\a)
(string? #\x53)
(string? #\newline)
(string? "\n")
(string? "\r")
(string? "\f")
(string? "\t")
(string? 53/17)
(string? '())
(string? '(1 2))
(string? (and))
(string? (or))
(string? '#(1 2))
(define stringer #t)
(define checker (lambda (x) (lambda (y) (x y))))
((checker string?) "string")
((checker string?) 'symbol)
((checker string?) stringer) 
((checker string?) #t)
((checker string?) 555)
((checker string?) 5/7)
((checker string?) 3/1)
((checker string?) '())
((checker string?) '(1 2) )
((checker string?) '#(1 2 #t))
((checker string?) (begin 1 2 "a"))
((checker string?) (begin "a" 1 2))

;Alon & Ziv: not implemented yet
;; (string? (string->symbol "maor"))
;; (string? (symbol->string 'maor))
;; (string? (symbol->string (string->symbol "maor")))
;; (string? (string->symbol (symbol->string 'pnina)))