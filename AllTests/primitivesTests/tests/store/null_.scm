'()
'(())

(define maor 'a)
(null? maor)
(null? #\a)
(null? "#t")
(null? #t)
(null? #f)
(null? 't)
(null? 'f)
(define maor 55)
(null? maor)
(define maor 0)
(null? maor)
(define minus -2)
(null? minus)
(null? 0)
(define frac 7/12)
(null? frac)
(null? 0/1)
(null? -0/1)
(define maor "maor")
(null? maor)
(null? #\A)
(null? #\x53)
(null? #\newline)
(null? "\f")
(null? "\t")
(null? "\\")
(null? '())
(null? '(1 2))
(null? '(()))
(define rik '())
(null? rik)
(define rik '(()))
(null? rik)
(null? (and))
(null? (or))
(null? '#(1 2))

(define nuller '())
(define checker (lambda (x) (lambda (y) (x y))))
((checker null?) "string")
((checker null?) 'symbol)
((checker null?) nuller) 
((checker null?) #t)
((checker null?) 555)
((checker null?) 5/7)
((checker null?) 3/1)
((checker null?) '())
((checker null?) '(1 2) )
((checker null?) '#(1 2 #t))
((checker null?) (begin 1 2 '()))
((checker null?) (begin '() 1 2))
