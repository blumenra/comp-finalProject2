(list 5 7 8)
(list 9 10 11 12)
(list 8)
(list)
(pair? (list))
'(8 . ())
'()
(list (cons 5 6) 7)
(list 88 99 #f #t "maor" "pnina" 5/7 6/7 "\x53;" #\x66)
(null? (list '()))
(pair? (list 6 5))
(pair? (list 6 7 8))
(define numberer 5)
(define truer #t)
(define charer #\a)
(define charer2 #\x53)
(list numberer truer charer charer2)
(list)
(list 1 2 3)
(list (begin 1 2 3))

(list 0 #\a)
(list 5 #\b)
(list 30 #\7)
(list 0 #\a)
(list 0 0)
(list 1)
(list 2)
(list 0 #\x53)
(list 3 #\a)
(list 17 0)
(list 17 33)
(define koko (list 5 5/7))
koko
(define koko (list 3 #\x52))
koko
(define truer #t)
(list 6 truer)
(define checker (lambda (x y ) (list x y)))
(define result (checker 10 truer))
result 
(pair? result)
(define result (checker 0 truer))
result
(pair? result)


